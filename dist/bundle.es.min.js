import{__awaiter as t}from"tslib";import e from"axios";import{UAParser as i}from"ua-parser-js";import{v4 as s}from"uuid";const n=new class{constructor(){this.onInitEvents=[]}init(i){return t(this,void 0,void 0,(function*(){const t=e.create({baseURL:"https://api.loopmetrics.jp",headers:{"x-api-key":i.apiKey}});if(this.httpClient=t,this.config=Object.assign(Object.assign({},i),{session:{}}),void 0!==i.user&&void 0!==i.user.distinctId||this.getDistinctUserIdFromLocalStorage(),i.tenant){const t=yield this.updateTenantAsync(i.tenant);this.internalTenantId=t.internalTenantId}if(i.user){const t=yield this.updateUserAsync(i.user);this.internalUserId=t.internalUserId,this.config.session.sessionId=t.sessionId,this.config.session.updatedAt=t.sessionUpdatedAt}this.onInitEvents.forEach(t=>{this.track(t.eventName,t.eventProperties,t.callback)})}))}track(e,i,s){var n,o;return t(this,void 0,void 0,(function*(){if(this.internalUserId)try{const t=yield this.httpClient.post("/v1/track/events",this.appendProperties({internalTenantId:this.internalTenantId,internalUserId:this.internalUserId,tenantId:null===(n=this.config.tenant)||void 0===n?void 0:n.distinctId,userId:null===(o=this.config.user)||void 0===o?void 0:o.distinctId,name:e,session:this.config.session},i));this.config.session.sessionId=t.data.session.id,this.config.session.updatedAt=t.data.session.updatedAt,s&&s()}catch(t){console.error(t)}else{const t=i?" with properties {JSON.stringify(eventProperties)}":"";console.warn(`Loopmetrics sdk has not yet finished initializing. Event ${e}${t} was not sent.`)}}))}trackOnInit(e,i,s){return t(this,void 0,void 0,(function*(){this.onInitEvents.push({eventName:e,eventProperties:i,callback:s})}))}updateTenant(t){const e=Object.assign(Object.assign({},this.config.tenant),t);this.httpClient.post("/v1/track/tenants",this.appendProperties({id:e.distinctId,companyName:e.companyName},e.properties))}updateTenantAsync(e){return t(this,void 0,void 0,(function*(){const t=Object.assign(Object.assign({},this.config.tenant),e);return(yield this.httpClient.post("/v1/track/tenants",this.appendProperties({id:t.distinctId,companyName:t.companyName},t.properties))).data}))}updateUser(t){var e;const i=Object.assign(Object.assign({},this.config.user),t);this.httpClient.post("/v1/track/users",this.appendProperties({internalTenantId:this.internalTenantId,id:i.distinctId,tenantId:null===(e=this.config.tenant)||void 0===e?void 0:e.distinctId,firstName:i.firstName,lastName:i.lastName,email:i.email},i.properties))}updateUserAsync(e){var s;return t(this,void 0,void 0,(function*(){const t=yield this.getGeolocation(),n=new i,o={browser:n.getBrowser().name,browserVersion:n.getBrowser().major,os:n.getOS().name,osVersion:n.getOS().version,country:null==t?void 0:t.country,region:null==t?void 0:t.region},a=Object.assign(Object.assign({},this.config.user),e);return(yield this.httpClient.post("/v1/track/users",this.appendProperties({internalTenantId:this.internalTenantId,id:a.distinctId,tenantId:null===(s=this.config.tenant)||void 0===s?void 0:s.distinctId,firstName:a.firstName,lastName:a.lastName,email:a.email,session:o},a.properties))).data}))}getGeolocation(){return t(this,void 0,void 0,(function*(){const i=yield e.get("http://ip-api.com/json?fields=status,message,country,regionName&lang=ja");return"fail"===i.data.status?yield new Promise(i=>{setTimeout(()=>t(this,void 0,void 0,(function*(){const t=yield e.get("http://ip-api.com/json?fields=status,message,country,regionName&lang=ja");"fail"!==t.data.status?i({country:t.data.country,region:t.data.regionName}):i(void 0)})),3e3)}):{country:i.data.country,region:i.data.regionName}}))}getDistinctUserIdFromLocalStorage(){const t=localStorage.getItem("lm_s");if(null!==t)this.config.user=Object.assign(Object.assign({},this.config.user),{distinctId:t});else{localStorage.setItem("lm_s",s());const t=localStorage.getItem("lm_s");this.config.user=Object.assign(Object.assign({},this.config.user),{distinctId:t})}}appendProperties(t,e){return void 0===e?t:Object.assign(Object.assign({},t),{properties:e})}};export default n;export{n as loopmetrics};
